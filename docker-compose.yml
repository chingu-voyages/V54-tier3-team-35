version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: database
      
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/src/setup.sql:/docker-entrypoint-initdb.d/setup.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]  
      interval: 5s
      timeout: 10s
      retries: 5


  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: node_backend
    restart: always
    env_file:
      - ./backend/.env
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
    command: npm run dev
    depends_on:
      db:
        condition: service_healthy

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: client_app
    restart: always
    depends_on:
      - backend
    ports:
      - "5173:5173" 
    volumes:
      - ./client:/app
      - /app/node_modules
    command: npm run dev -- --host

volumes:
  pgdata: 
